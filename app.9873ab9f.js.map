{"version":3,"sources":["scripts/navbar.js","scripts/grid.js","app.js"],"names":["DECKS","prvi_dek","drugi_dek","tab_setup","window_hash","window","location","hash","clicked_tab","document","querySelector","querySelectorAll","forEach","element","classList","add","remove","getAttribute","select_deck","event","clicked_link","target","contains","selected_cards","push","innerHTML","build_cards","cards_container","template_hexagon","Array","from","slice","card_url","hexagon","content","cloneNode","firstChild","addEventListener","dispatchEvent","CustomEvent","detail","image_url","style","backgroundImage","appendChild","setup_decks","deck_list_template","deck_list","Object","keys","deck_name","new_deck_list_item","exports","grid_state","data","add_card","card_pos","remove_card","store","localStorage","setItem","JSON","stringify","restore","parse","getItem","console","log","hex_position","clear","select_hexagon","selected_hex","new_select","fill_hexagon","empty_hexagon","hex_pos","generate_grid","grid_container","j","i","setAttribute","gridRowStart","gridColumn","require","DEFAULT_HEX_WIDTH","DEFAULT_HEX_HEIGHT","DEFAULT_GRID_AUTO_ROWS","zoom_grid","scale","hex","width","height","gridAutoRows","scale_size","Number","value","reload"],"mappings":"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","file":"app.9873ab9f.js","sourceRoot":"..","sourcesContent":["const DECKS = {\n\tprvi_dek: [\n\t\t\"https://picsum.photos/300\",\n\t\t\"https://picsum.photos/200\",\n\t\t\"https://picsum.photos/200\",\n\t\t\"https://picsum.photos/200\",\n\t],\n\tdrugi_dek: [\n\t\t\"https://picsum.photos/200\",\n\t\t\"https://picsum.photos/200\",\n\t\t\"https://picsum.photos/200\",\n\t\t\"https://picsum.photos/200\",\n\t],\n};\n\n\nfunction tab_setup() {\n\tlet window_hash = window.location.hash;\n\tif (!window_hash) window_hash = \"#nav-decks\";\n\n\tconst clicked_tab = document.querySelector(`[href='${window_hash}']`);\n\n\tdocument.querySelectorAll(\".nav-link\").forEach((element) => {\n\t\tif (clicked_tab === element) {\n\t\t\telement.classList.add(\"active\");\n\t\t} else {\n\t\t\telement.classList.remove(\"active\");\n\t\t}\n\t});\n\n\tdocument.querySelectorAll(\".tab-container\").forEach((element) => {\n\t\tif (element.getAttribute(\"data-hash\") === window_hash) {\n\t\t\telement.classList.remove(\"d-none\");\n\t\t} else {\n\t\t\telement.classList.add(\"d-none\");\n\t\t}\n\t});\n}\n\nfunction select_deck(event) {\n\tconst clicked_link = event.target;\n\n\tif (clicked_link.classList.contains(\"active\")) {\n\t\tclicked_link.classList.remove(\"active\");\n\t} else {\n\t\tclicked_link.classList.add(\"active\");\n\t}\n\n\tconst selected_cards = [];\n\tdocument.querySelectorAll(\".list-group-item.active\").forEach((element) => {\n\t\tselected_cards.push(...DECKS[element.innerHTML]);\n\t});\n\n\tbuild_cards(selected_cards);\n}\n\n\nfunction build_cards(selected_cards) {\n\tconst cards_container = document.querySelector(\".container-cards\");\n\tconst template_hexagon = document.querySelector(\"#hex-template\");\n\n\tArray.from(cards_container.querySelectorAll(\".hex:not(.first)\"))\n\t\t.slice(1)\n\t\t.forEach(element => {\n\t\t\telement.remove()\n\t\t});\n\n\tselected_cards.forEach((card_url) => {\n\t\tconst hexagon = template_hexagon.content.cloneNode(true).firstChild;\n\t\thexagon.addEventListener(\"click\", () => {\n\t\t\tcards_container.dispatchEvent(\n\t\t\t\tnew CustomEvent(\"cardSelect\", {detail: {image_url: card_url}})\n\t\t\t);\n\t\t})\n\n\t\thexagon.style.backgroundImage = `url(\"${card_url}\")`;\n\t\tcards_container.appendChild(hexagon);\n\t});\n}\n\n\nfunction setup_decks() {\n\tconst deck_list_template = document.querySelector(\"#deck-list-template\");\n\tconst deck_list = document.querySelector(\".container-decks\");\n\n\tObject.keys(DECKS).forEach((deck_name) => {\n\t\tconst new_deck_list_item = deck_list_template.content.cloneNode(true)\n\t\t\t.firstChild;\n\n\t\tnew_deck_list_item.innerHTML = deck_name;\n\t\tdeck_list.appendChild(new_deck_list_item);\n\t});\n\n\tconst list_group_links = document.querySelectorAll(\n\t\t\".list-group.tab-container>div\"\n\t);\n\n\tlist_group_links.forEach((element) => {\n\t\telement.addEventListener(\"click\", select_deck);\n\t});\n}\n\nexports.setup_decks = setup_decks;\nexports.tab_setup = tab_setup;\n","const grid_state = {\n\tdata: {},\n\n\tadd_card: function(card_pos, image_url) {\n\t\tthis.data[card_pos] = image_url;\n\t},\n\n\tremove_card: function(card_pos) {\n\t\tdelete this.data[card_pos]\n\t},\n\n\tstore: function() {\n\t\twindow.localStorage.setItem(\"hex_grid_map\", JSON.stringify(this.data));\n\t},\n\n\trestore: function() {\n\t\tthis.data = JSON.parse(window.localStorage.getItem(\"hex_grid_map\") || \"{}\");\n\t\tconsole.log(this.data);\n\t\tObject.keys(this.data).forEach(hex_position => {\n\t\t\tconst hex = document.querySelector(`[data-position=\"${hex_position}\"]`);\n\t\t\thex.style.backgroundImage = `url(\"${this.data[hex_position]}\")`;\n\t\t});\n\t},\n\n\tclear: function() {\n\t\tthis.data = {};\n\t}\n}\n\n\nfunction select_hexagon(event) {\n\tconst selected_hex = document.querySelector(\".hex-container>.hex.bg-primary\");\n\tif(selected_hex) {\n\t\tselected_hex.classList.remove(\"bg-primary\");\n\t\tselected_hex.classList.add(\"bg-light\");\n\t}\n\n\tconst new_select = event.target;\n\n\tnew_select.classList.add(\"bg-primary\");\n\tnew_select.classList.remove(\"bg-light\");\n}\n\n\nfunction fill_hexagon(image_url) {\n\tconst selected_hex = document.querySelector(\".hex-container>.hex.bg-primary\");\n\tif(! selected_hex) {\n\t\treturn;\n\t}\n\n\tselected_hex.style.backgroundImage = `url(\"${image_url}\")`\n\tgrid_state.add_card(selected_hex.getAttribute(\"data-position\"), image_url);\n}\n\n\nfunction empty_hexagon() {\n\tconst selected_hex = document.querySelector(\".hex-container>.hex.bg-primary\");\n\tif(! selected_hex) { \n\t\treturn;\n\t}\n\n\tselected_hex.style.backgroundImage = \"\";\n\n\tconst hex_pos = selected_hex.getAttribute(\"data-position\");\n\tgrid_state.remove_card(hex_pos);\n\n}\n\n\nfunction generate_grid() {\n\tconst template_hexagon = document.querySelector(\"#hex-template\");\n\tconst grid_container = document.querySelector(\".hex-container\");\n\n\tfor (let j = 1; j <= 30; j++) {\n\t\tfor (let i = 1; i <= 30; i++) {\n\t\t\tconst hexagon = template_hexagon.content.cloneNode(true).firstChild;\n\t\t\thexagon.setAttribute(\"data-position\", `${j}-${i}`);\n\t\t\thexagon.addEventListener(\"click\", select_hexagon);\n\t\t\thexagon.style.gridRowStart = j;\n\n\t\t\tif (j % 2 == 1) hexagon.style.gridColumn = `${i * 2} / span 2`;\n\t\t\telse hexagon.style.gridColumn = `${i * 2 - 1} / span 2`;\n\n\t\t\tgrid_container.appendChild(hexagon);\n\t\t}\n\t}\n}\n\n\nexports.generate_grid = generate_grid;\nexports.fill_hexagon = fill_hexagon;\nexports.grid_state = grid_state;\nexports.empty_hexagon = empty_hexagon;\n","const { setup_decks, tab_setup } = require(\"./scripts/navbar\");\nconst { generate_grid, fill_hexagon, grid_state, empty_hexagon } = require(\"./scripts/grid\");\n\nconst DEFAULT_HEX_WIDTH = 240;\nconst DEFAULT_HEX_HEIGHT = 265;\nconst DEFAULT_GRID_AUTO_ROWS = 200;\n\n\nfunction zoom_grid(scale) {\n\tconst hexes = document.querySelectorAll(\".hex-container>.hex\");\n\thexes.forEach((hex) => {\n\t\thex.style.width = `${DEFAULT_HEX_WIDTH * scale}px`;\n\t\thex.style.height = `${DEFAULT_HEX_HEIGHT * scale}px`;\n\t});\n\n\tconst grid_container = document.querySelector(\".hex-container\");\n\tgrid_container.style.gridAutoRows = `${DEFAULT_GRID_AUTO_ROWS * scale}px`;\n}\n\n\ndocument.querySelector(\".container-cards\").addEventListener(\"cardSelect\", (event) =>\n{\n\tconst image_url = event.detail.image_url;\n\tfill_hexagon(image_url);\n\n});\n\ngenerate_grid();\ntab_setup();\nsetup_decks();\ngrid_state.restore();\nwindow.addEventListener(\"hashchange\", tab_setup);\nwindow.addEventListener(\"beforeunload\", () => grid_state.store());\ndocument.querySelector(\".scale-select\")\n\t.addEventListener(\"change\", event => {\n\t\tconst scale_size = Number(event.target.value);\n\t\tconsole.log(scale_size);\n\t\tzoom_grid(scale_size);\n\t});\ndocument.querySelector(\".hex-delete\")\n\t.addEventListener(\"click\", () => {\n\t\tempty_hexagon();\n\t});\ndocument.querySelector(\".cards-tools>button\")\n\t.addEventListener(\"click\", () => {\n\t\tgrid_state.clear();\n\t\tlocation.reload();\n\t});\n"]}